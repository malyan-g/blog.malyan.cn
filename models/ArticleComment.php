<?php

namespace app\models;

use Yii;
use app\components\helpers\RedisHelper;

/**
 * This is the model class for table "{{%article_comment}}".
 *
 * @property integer $id
 * @property integer $article_id
 * @property integer $comment_id
 * @property integer $user_id
 * @property integer $answer_user_id
 * @property integer $praise_num
 * @property string $content
 * @property integer $created_at
 */
class ArticleComment extends \yii\db\ActiveRecord
{
    const PRAISE_KEY = 'article.comment.praise.user.';

    public $is_praise = false;
    
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%article_comment}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['article_id', 'content'], 'required'],
            [['article_id', 'comment_id', 'user_id', 'answer_user_id', 'praise_num', 'created_at'], 'integer'],
            [['content'], 'string', 'max' => 255],
            [['comment_id', 'answer_user_id', 'praise_num'], 'default', 'value' => 0],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'article_id' => '文章ID',
            'comment_id' => '回复评论ID',
            'user_id' => '用户ID',
            'answer_user_id' => '回复用户ID',
            'praise_num' => '点赞次数',
            'content' => '评论内容',
            'created_at' => '创建时间',
        ];
    }

    /**
     * @inheritdoc
     */
    public function beforeSave($insert)
    {
        $this->user_id = Yii::$app->user->id;
        $this->created_at = time();
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function afterFind()
    {

    }

    /**
     * 用户关系
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id'])->select(['id', 'nickname']);
    }

    /**
     * 用户关系
     * @return \yii\db\ActiveQuery
     */
    public function getAnswerUser()
    {
        return $this->hasOne(User::className(), ['id' => 'answer_user_id'])->select(['id', 'nickname']);
    }

    /**
     * 获取用户评论
     * @param $id
     * @param $userId
     * @return array|\yii\db\ActiveRecord[]
     */
    public static function comments($id)
    {
        $comments = self::find()
            ->innerJoinWith(['user'])
            ->With(['answerUser'])
            ->where(['article_id' => $id])
            ->indexBy('id')
            ->orderBy(['created_at' => SORT_ASC])
            ->asArray()
            ->all();

        $userId = Yii::$app->user->id;
        foreach ($comments as $comment){
            $comment['user']['avatar'] = 'http://image.malyan.cn/avatars/' . (crc32($comment['user']['id']) % 10) . '.jpg';;
            if($comment['comment_id']){
                $comments[$comment['comment_id']]['child'][] = $comment;
                $comments[$comment['comment_id']]['user'][$comment['user']['id']] = $comment['user'];
                unset($comments[$comment['id']]);
            }else{
                $comments[$comment['id']]['praise_num'] = RedisHelper::getInstance()->sCard(self::PRAISE_KEY . $comment['id']);
                $comments[$comment['id']]['is_praise'] = $userId ? RedisHelper::getInstance()->sIsMembers(self::PRAISE_KEY . $comment['id'], $userId) : false;
            }
        }

        return $comments;
    }
}
