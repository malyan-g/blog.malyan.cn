<?php

namespace app\models;

use Yii;
use app\components\helpers\RedisHelper;

/**
 * This is the model class for table "{{%article}}".
 *
 * @property integer $id
 * @property integer $author
 * @property integer $category_id
 * @property integer $browse_num
 * @property integer $comment_num
 * @property integer $status
 * @property integer $created_at
 */
class Article extends \yii\db\ActiveRecord
{
    const PRAISE_KEY = 'article.praise.user.';

    const STATUS_SHOW = 1;
    const STATUS_HIDDEN = 2;

    const SORT_NEW = 1; // 最新
    const SORT_BROWSE = 2; // 浏览
    const SORT_COMMENT= 3; // 评论
    
    public $praise_num = 0;
    public $is_praise = false;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%article}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['category_id'], 'required'],
            [['author', 'category_id', 'browse_num', 'comment_num', 'status', 'created_at'], 'integer'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'author' => '作者',
            'category_id' => '类型',
            'browse_num' => '浏览次数',
            'comment_num' => '评论次数',
            'status' => '状态',
            'created_at' => '创建时间',
        ];
    }

    /**
     * @inheritdoc
     */
    public function beforeSave($insert)
    {
        if($this->isNewRecord){
            $this->author = max(Yii::$app->user->id, 1);
            $this->created_at = time();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function afterFind()
    {
        $userId = Yii::$app->user->id;
        $key = self::PRAISE_KEY . $this->id;
        if($userId){
            $this->is_praise = RedisHelper::getInstance()->sIsMembers($key, Yii::$app->user->id);
        }
        $this->praise_num = RedisHelper::getInstance()->sCard($key);
        parent::afterFind();
    }
    
    /**
     * 分类关系
     * @return \yii\db\ActiveQuery
     */
    public function getCategory()
    {
        return $this->hasOne(ArticleCategory::className(), ['id' => 'category_id']);
    }

    /**
     * 附加关系
     * @return \yii\db\ActiveQuery
     */
    public function getAttach()
    {
        return $this->hasOne(ArticleAttach::className(), ['article_id' => 'id']);
    }

    /**
     * 用户关系
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'author']);
    }
}
